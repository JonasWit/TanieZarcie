@using WEB.Shop.Application.Crawlers
@inject CrawlersCommander Commander

@if (!loading)
{
    <!-- Cards -->
    <div class="container-fluid">
        <div class="row">
            <div class="col-xl-10 col-lg-9 col-md-8 ml-auto">
                <div class="row pt-md-5 mt-md-3 mb-5">

                    <!-- Shops Cards -->
                    @foreach (Shops shop in (Shops[])Enum.GetValues(typeof(Shops)))
                    {
                        <div class="col-xl-3 col-sm-6 p-2">
                            <div class="card tza-card-common">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between mb-2">
                                        <i class="fas fa-shopping-cart fa-3x text-warning"></i>
                                        <div class="text-right text-secondary">
                                            <h3>@shop.ToString()</h3>
                                            <h6>@($"{(Commander.DataBaseCheck.Any(x => x.Shop == shop.ToString()) ? Commander.DataBaseCheck.Where(x => x.Shop == shop.ToString()).FirstOrDefault()?.PromoProductsCount : 0)} Stored")</h6>
                                            <h8>@($"{(Commander.DataBaseCheck.Any(x => x.Shop == shop.ToString()) ? Commander.DataBaseCheck.Where(x => x.Shop == shop.ToString()).FirstOrDefault()?.OldestEntry.ToString("dd/MM/yy HH:mm:ss") : "-No Records-")} Oldest Record")</h8>
                                        </div>
                                    </div>

                                    <!-- Progress Bars Start -->
                                    @{
                                        string color = "bg-danger";

                                        double totalStoredProducts = Commander.DataBaseCheck.Sum(s => s.PromoProductsCount);
                                        double avgStore = (totalStoredProducts / Commander.DataBaseCheck.Count);

                                        double shopStoredProducts = Commander.DataBaseCheck.Where(x => x.Shop == shop.ToString()).FirstOrDefault() != null ?
                                            Commander.DataBaseCheck.Where(x => x.Shop == shop.ToString()).FirstOrDefault().PromoProductsCount : 0;

                                        double shopStoredShare = totalStoredProducts == 0 ? 0 : Math.Round(((shopStoredProducts / avgStore) * 100), 2);


                                        if (shopStoredShare < 20)
                                        {
                                            color = "bg-danger";
                                        }
                                        else if (shopStoredShare < 70)
                                        {
                                            color = "bg-warning";
                                        }
                                        else
                                        {
                                            color = "bg-success";
                                        }

                                        <h6 class="mb-3 text-center">Database Share</h6>
                                        <div class="progress mb-4" style="height: 20px">
                                            <div class="progress-bar text-dark text-center progress-bar-striped font-weight-bold @color" style="width: @($"{ shopStoredShare }%")">
                                                @($"{ shopStoredShare }%")
                                            </div>
                                        </div>

                                    }

                                    <!-- Progress Bars End -->
                                </div>
                                <div class="card-footer text-secondary">
                                    <table>
                                        <tbody>
                                            <tr>
                                                <td>
                                                    <button @onclick="(() => RunEngine(shop))" class="bg-transparent border-0 tza-card-icon">
                                                        <i class="fas fa-bug mr-3"></i>
                                                        <span>Scrap</span>
                                                    </button>
                                                </td>
                                                <td>
                                                    <button @onclick="(() => ClearDataBase(shop))" class="bg-transparent border-0 tza-card-icon">
                                                        <i class="fas fa-database mr-3"></i>
                                                        <span>Delete</span>
                                                    </button>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}
else
{
    <!-- Loader-->
    <div class="container-fluid">
        <div class="row">
            <div class="col-xl-10 col-lg-9 col-md-8 ml-auto">
                <div class="row pt-md-5 mt-md-3 mb-5">
                    <div class="tza-loader">
                        <span></span>
                        <span></span>
                        <span></span>
                        <span></span>
                        <span></span>
                        <span></span>
                        <span></span>
                        <span></span>
                        <span></span>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {

    private bool loading;

    protected override async Task OnInitializedAsync()
    {
        if (loading)
        {
            return;
        }
        else
        {
            loading = true;
            await Commander.CheckDataBaseAsync();
            loading = false;
        }
    }

    private async Task RunEngine(Shops shop)
    {
        if (loading)
        {
            return;
        }
        else
        {
            loading = true;
            await Commander.RunEngineAsync(shop.ToString());
            loading = false;
        }
    }

    private async Task ClearDataBase(Shops shop)
    {
        if (loading)
        {
            return;
        }
        else
        {
            loading = true;
            await Commander.ClearDataBaseAsync(shop.ToString());
            loading = false;
        }
    }

}
