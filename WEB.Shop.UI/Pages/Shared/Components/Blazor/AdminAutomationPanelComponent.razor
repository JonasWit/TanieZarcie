@using WEB.Shop.Application.Automations
@inject AutomationController AutomationController

@if (loading)
{
    <div class="block">
        <progress class="progress is-small is-warning" max="100">25%</progress>
    </div>
}

<div class="box">
    <p class="content">Automation Options</p>
    <button class="button is-success is-small" @onclick="StartScheduler">Start Automation</button>
    <button class="button is-warning is-small" @onclick="StopScheduler">Stop Automation</button>
    <button class="button is-primary is-small" @onclick="GetActiveJobs">Check Active Jobs</button>
</div>

<div class="box">
    <p class="content">Automation Status</p>
    <div class="tags has-addons">
        <span class="tag">Scheduler</span>
        @if (AutomationController.CheckScheduler())
        {
            <span class="tag is-success">Active</span>
        }
        else
        {
            <span class="tag is-warning">Inactive</span>
        }
    </div>
</div>

@code {

    bool loading = false;
    List<AutomationController.Response> automationDetails;

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(() => automationDetails = new List<AutomationController.Response>());
    }

    private async Task StartScheduler()
    {
        if (loading)
        {
            return;
        }
        else
        {
            loading = true;
            await AutomationController.CreateScheduler();
            await AutomationController.ScheduleCrawlersAutomation();
            loading = false;
        }
    }

    private void GetActiveJobs()
    {
        if (loading)
        {
            return;
        }
        else
        {
            loading = true;
            automationDetails = AutomationController.GetActiveJobs();
            loading = false;
        }
    }

    private async Task StopScheduler()
    {
        if (loading)
        {
            return;
        }
        else
        {
            loading = true;
            await AutomationController.DisposeScheduler();
            loading = false;
        }
    }
}