@inject AuthenticationStateProvider authenticationStateProvider
@inject UserManager<IdentityUser> userManager

<!-- Tables Start -->
<div class="container-fluid">
    <div class="row mb-5">
        <div class="col-xl-10 col-lg-9 col-md-8 ml-auto">
            <div class="row align-items-center">
                <div class="col-xl-6 col-12 mb-3 mb-xl-0">
                    <div class="card rounded mt-5">
                        <div class="card-body">
                            <h3 class="text-muted text-center mb-4">Add User</h3>
                            <ul class="list-inline text-center py-3">
                                <li class="list-inline-item">
                                    <a href="">
                                        <i class="fas fa-pencil-alt text-success"></i>
                                        <span class="h6 text-muted">Admin</span>
                                    </a>
                                </li>
                                <li class="list-inline-item">
                                    <a href="">
                                        <i class="fas fa-camera text-info"></i>
                                        <span class="h6 text-muted">Manager</span>
                                    </a>
                                </li>
                            </ul>

                            <EditForm Model="@newUser" OnValidSubmit="CreateUserForm">
                                <DataAnnotationsValidator />
                                <ValidationSummary />
                                <div class="form-group">
                                    <InputText @bind-Value="newUser.Username" class="form-control py-2 mb-3" type="text" placeholder="Username" />
                                    <InputText @bind-Value="newUser.Password" class="form-control py-2 mb-3" type="password" placeholder="Password" />
                                    <button type="submit" class="btn btn-block text-uppercase font-weight-bold text-light bg-info py-2 mb-5">Add User</button>
                                </div>
                            </EditForm>

                        </div>
                    </div>
                </div>
                <div class="col-xl-6 col-12 mb-3 mb-xl-0">
                    <h3 class="text-muted text-center">Users</h3>
                    <table class="table table-dark table-hover text-center">
                        <thead>
                            <tr class="text-muted">
                                <th>Name</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in users)
                            {
                                <tr>
                                    <th>@user.UserName</th>
                                    <td>
                                        <a href="" @onclick="(() => DeleteUser(user))">
                                            <span class="badge badge-danger w-75 py-2 tza-nav-icon">Delete</span>
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Tables End -->
<!-- User Data -->
@*<div class="container-fluid">
        <div class="col-xl-10 col-lg-9 col-md-6 ml-auto">
            <div class="row align-items-center mb-5">

                <div class="col">
                    <h3 class="text-muted text-center">Users</h3>
                    <table class="table table-dark table-hover text-center">
                        <thead>
                            <tr class="text-muted">
                                <th>Name</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var user in users)
                            {
                                <tr>
                                    <th>@user.UserName</th>
                                    <td>
                                        <a href="" @onclick="(() => DeleteUser(user))">
                                            <span class="badge badge-danger w-75 py-2 tza-nav-icon">Delete</span>
                                        </a>
                                    </td>
                                </tr>
                            }

                        </tbody>
                    </table>

                </div>


                <div class="col">
                    <div class="card rounded">
                        <div class="card-body">
                            <h5 class="text-muted text-center mb-4">Add User</h5>
                            <ul class="list-inline text-center py-3">
                                <li class="list-inline-item">
                                    <a href="">
                                        <i class="fas fa-pencil-alt text-success"></i>
                                        <span class="h6 text-muted">Admin</span>
                                    </a>
                                </li>
                                <li class="list-inline-item">
                                    <a href="">
                                        <i class="fas fa-camera text-info"></i>
                                        <span class="h6 text-muted">Manager</span>
                                    </a>
                                </li>
                            </ul>

                            <EditForm Model="@newUser" OnValidSubmit="CreateUserForm">
                                <DataAnnotationsValidator />
                                <ValidationSummary />
                                <div class="form-group">
                                    <InputText @bind-Value="newUser.Username" class="form-control py-2 mb-3" type="text" placeholder="Username" />
                                    <InputText @bind-Value="newUser.Password" class="form-control py-2 mb-3" type="password" placeholder="Password" />
                                    <button type="submit" class="btn btn-block text-uppercase font-weight-bold text-light bg-info py-2 mb-5">Add User</button>
                                </div>
                            </EditForm>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>*@

@code {

    private bool loading;
    private List<IdentityUser> users;
    private UserModel newUser = new UserModel();
    private string message;

    protected override async Task OnInitializedAsync()
    {
        users = userManager.Users.ToList();
    }

    private async Task DeleteUser(IdentityUser userName)
    {
        if (loading)
        {
            return;
        }
        else
        {
            loading = true;

            try
            {
                var result = await userManager.DeleteAsync(userName);
                users = userManager.Users.ToList();

                if (result == IdentityResult.Success)
                {
                    message = "User deleted!";
                }
                else
                {
                    message = "Issue when deleting user!";
                }
            }
            catch (Exception)
            {
                message = "Issue when addin a user!";
            }
            finally
            {
                loading = false;
            }
        }
    }

    private async Task CreateUserForm()
    {
        if (loading)
        {
            return;
        }
        else
        {
            loading = true;

            try
            {
                if (users.Any(x => x.UserName == newUser.Username))
                {
                    return;
                }

                var managerUser = new IdentityUser()
                {
                    UserName = newUser.Username
                };

                var user = await userManager.CreateAsync(managerUser, newUser.Password);

                if (user.Succeeded)
                {
                    var managerClaim = new Claim("Role", "Manager");

                    await userManager.AddClaimAsync(managerUser, managerClaim);

                    users = userManager.Users.ToList();

                    message = "User added!";
                }
                else
                {
                    message = "Issue when addin a user!";
                }
            }
            catch (Exception)
            {
                message = "Issue when addin a user!";
            }
            finally
            {
                loading = false;
            }
        }
    }
}
