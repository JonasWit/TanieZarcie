@using System.Net.Http
@using WEB.Shop.Application.ProductsAdmin
@inject IHttpClientFactory HttpFactory
@inject NavigationManager MyNavigationManager

<h3>AdminIndexComponent</h3>

<button class="button is-warning" @onclick="TestApi">TEST</button>

@code {

    protected override async Task OnInitializedAsync()
    {

    }

    private void TestApi()
    {
        try
        {
            using var client = HttpFactory.CreateClient();

            HttpRequestMessage httpRequestMessage= new HttpRequestMessage();
            httpRequestMessage.Method = new HttpMethod("POST");
            httpRequestMessage.RequestUri = new Uri($"{MyNavigationManager.Uri}/Cart/AddOneAsync/1");

            var response = client.SendAsync(httpRequestMessage).Result;
        }
        catch (Exception)
        {
            throw;
        }

    }


}

@*@using System.Net.Http
    @using WEB.Shop.UI
    @inject IHttpClientFactory HttpFactory
    @inject NavigationManager MyNavigationManager

    <h3>AdminIndexComponent</h3>

    @code {

        protected override async Task OnInitializedAsync()
        {
            var client = HttpFactory.CreateClient();
            var baseUrl = MyNavigationManager.Uri;
            client.BaseAddress = new Uri(baseUrl);
            var result = await client.GetJsonAsync<GetProducts.Response[]>("/products");
            var content = result.ToString();
        }
    }*@


@*<div id="app" class="container">
        <div v-if="!editing">
            <button class="button" @@click="newProduct">Add New Product</button>
            <table class="table">
                <tr>
                    <th>Id</th>
                    <th>Product</th>
                    <th>Value</th>
                </tr>
                <tr v-for="(product, index) in products">
                    <td>{{product.id}}</td>
                    <td>{{product.name}}</td>
                    <td>{{product.value}}</td>
                    <td><a @@click="editProduct(product.id, index)">Edit</a></td>
                    <td><a @@click="deleteProduct(product.id, index)">Remove</a></td>
                </tr>
            </table>
        </div>

        <div v-else>
            <div class="field">
                <label class="label">Product Name</label>
                <div class="control">
                    <input class="input" v-model="productModel.name" />
                </div>
            </div>
            <div class="field">
                <label class="label">Description</label>
                <div class="control">
                    <input class="input" v-model="productModel.description" />
                </div>
            </div>
            <div class="field">
                <label class="label">Value</label>
                <div class="control">
                    <input class="input" v-model="productModel.value" />
                </div>
            </div>

            <button class="button is-success" @@click="createProduct" v-if="!productModel.id">Create Product</button>
            <button class="button is-warning" @@click="updateProduct" v-else>Update Product</button>
            <button class="button" @@click="cancel">Cancel</button>
        </div>
    </div>*@